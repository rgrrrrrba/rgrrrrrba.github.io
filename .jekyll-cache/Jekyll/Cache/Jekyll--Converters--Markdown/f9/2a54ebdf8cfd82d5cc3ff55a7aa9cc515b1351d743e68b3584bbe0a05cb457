I"¥<p>So all Iâ€™m doing here is creating a button that has a different images depending on the enum value that is bound to the control.</p>

<p>The images used are linked as resources in a resource project - the build action is <code class="language-plaintext highlighter-rouge">Resource</code>:</p>

<p><img src="https://snag.gy/o9v6X.jpg" alt="Images are linked using a build action of Resource" /></p>

<p>The buttonâ€™s view model (<code class="language-plaintext highlighter-rouge">ToggleMyEnumViewModel.cs</code>):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class ToggleMyEnumViewModel : Screen
{
    MyEnum _myEnumProperty = MyEnum.Foo;

    public MyEnum MyEnumProperty
    {
        get { return _myEnumProperty; }
        set
        {
            _myEnumProperty = value;
            NotifyOfPropertyChange(() =&gt; MyEnumProperty);
        }
    }

    public void ToggleMyThing()
    {
        MyEnumProperty = MyEnumProperty == MyEnum.Foo
            ? MyEnum.Bar
            : MyEnum.Foo;
    }
}

public enum MyEnum {
    Foo, Bar
}
</code></pre></div></div>

<p>The buttonâ€™s XAML (<code class="language-plaintext highlighter-rouge">ToggleMyEnumView.xaml</code>):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;Button x:Class="MyNamespace.ToggleMyEnumButton"
             xmlns="https://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="https://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="https://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="https://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MyNamespace"
             xmlns:i="https://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             Cursor="Hand"
             Background="Transparent"&gt;
    &lt;Image Stretch="Uniform"&gt;
        &lt;Image.Resources&gt;
            &lt;Style x:Key="XButtonStyle" TargetType="{x:Type Image}"&gt;
                &lt;Style.Triggers&gt;
                    &lt;DataTrigger Binding="{Binding MyEnumProperty}" Value="{x:Static local:MyEnum.Foo}"&gt;
                        &lt;Setter Property="Image.Source" Value="pack://application:,,,/MyProject.Assets;component/Images/foo.png" /&gt;
                    &lt;/DataTrigger&gt;
                    &lt;DataTrigger Binding="{Binding MyEnumProperty}" Value="{x:Static local:MyEnum.Bar}"&gt;
                        &lt;Setter Property="Image.Source" Value="pack://application:,,,/MyProject.Assets;component/Images/bar.png" /&gt;
                    &lt;/DataTrigger&gt;
                &lt;/Style.Triggers&gt;
            &lt;/Style&gt;
        &lt;/Image.Resources&gt;
    &lt;/Image&gt;
 
&lt;i:Interaction.Triggers&gt;
    &lt;i:EventTrigger EventName="Click"&gt;
        &lt;cal:ActionMessage MethodName="ToggleMyThing"/&gt;
    &lt;/i:EventTrigger&gt;
&lt;/i:Interaction.Triggers&gt;
</code></pre></div></div>

<p>&lt;/Button&gt;</p>

<p>The <code class="language-plaintext highlighter-rouge">&lt;cal:ActionMessage MethodName="ToggleMyThing"/&gt;</code> part is what binds the button click to the <code class="language-plaintext highlighter-rouge">ToggleMyThing</code> method in the view model.</p>

<p>Things to note in the viewâ€™s XAML:</p>

<ul>
  <li>The style sits in the imageâ€™s resources</li>
  <li>The target type of the style is set to the <code class="language-plaintext highlighter-rouge">Image</code> type</li>
  <li>The trigger has to be a data trigger</li>
  <li>The trigger just sets the <code class="language-plaintext highlighter-rouge">Source</code> property of the image based on the value of the <code class="language-plaintext highlighter-rouge">MyEnum</code> property</li>
</ul>

<p>This is then used as a content control bound to an instance of a <code class="language-plaintext highlighter-rouge">ToggleMyEnumViewModel</code>. Consuming XAML:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;ContentControl x:Name="ToggleMyEnum" /&gt;
</code></pre></div></div>

<p>Consuming view model:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public ToggleMyEnumViewModel ToggleMyEnum { get; private set; }

public ConsumingViewModel()
{
    /// ...
    ToggleMyEnum = new ToggleMyEnumViewModel(); // or use an IOC factory
}
</code></pre></div></div>

<p>This isnâ€™t exactly what I want, I would prefer to bind directly to a property on the consuming view model rather than indirectly with the <code class="language-plaintext highlighter-rouge">ToggleMyEnumViewModel</code>.</p>
:ET
I"ô<p>I just figured out something cool and thought I might blog it bacause itâ€™s been a while. I had a little React component that wrapped creating a menu link, adding some basic logic to apply a <code class="language-plaintext highlighter-rouge">current</code> class to the anchor if the <code class="language-plaintext highlighter-rouge">href</code> passed in matched the current path. I wanted to also pass arbitrary props down to the link - specifically a <code class="language-plaintext highlighter-rouge">data-method="delete"</code> attribute to one of the menu links which hooks into some nasty magic Rails stuff to convert an anchor click into a <code class="language-plaintext highlighter-rouge">DELETE</code> request.</p>

<p>Obviously I didnâ€™t want to add lots of explicit and optional prop values whenever I wanted to copy a prop down to the anchor. I found <a href="https://zhenyong.github.io/react/docs/transferring-props.html">this</a> (which seems to be an old version of the React docs) which suggests using the ES6 spread operator to transfer props.</p>

<p>So hereâ€™s my simple component:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const MenuItem = ({href, children, ...other}) =&gt; {
  const current = window.location.pathname === href ? 'current' : ''

  return &lt;li&gt;&lt;a href={href} className={current} {...other}&gt;{children}&lt;/a&gt;&lt;/li&gt;
}
</code></pre></div></div>

<p>I use it like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;MenuItem href="/profiles/me"&gt;My profile&lt;/MenuItem&gt;
&lt;MenuItem href="/users/sign_out" data-method="delete"&gt;Sign out&lt;/MenuItem&gt;
</code></pre></div></div>

:ET
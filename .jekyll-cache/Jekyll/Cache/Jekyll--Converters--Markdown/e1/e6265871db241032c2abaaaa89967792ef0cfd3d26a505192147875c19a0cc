I"²<p>On Github Iâ€™ve got a <a href="https://github.com/belfryimages/naive-ios-urlcache">NSUrlCache implementation that adds simple offline caching</a>. Dropping this in to an iOS application will allow <code class="language-plaintext highlighter-rouge">UIWebView</code>s to work offline.</p>

<p>It doesnâ€™t include precaching (although that could be done by bundling cached files with the app) or any smarts around cache invalidation or caching while online. In fact if the device is online it will <em>always</em> use the online resource and update the cached item. The only thing it adds is offline capability.</p>

<p>The cache is assigned to the static <code class="language-plaintext highlighter-rouge">NSUrlCache.SharedCache</code> so add this to your <code class="language-plaintext highlighter-rouge">AppDelegate.FinishedLaunching</code> or similar:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var cachePath = Path.Combine(Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments), "urlcache");
NSUrlCache.SharedCache = new OfflineUrlCache(cachePath);
</code></pre></div></div>

<p>This will only affect anything that uses <code class="language-plaintext highlighter-rouge">NSUrl</code>s like the <code class="language-plaintext highlighter-rouge">UIWebView</code>. So anything that is in .NET world like RestSharp wonâ€™t be affected. Which is usually what you would want.</p>
:ET
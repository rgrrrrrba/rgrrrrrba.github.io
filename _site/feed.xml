<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Ben d'Ã©tat - Ben Scott's blog</title>
		<description></description>		
		<link>http://bendetat.com</link>
		<atom:link href="http://bendetat.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>The Greatest string.FormatWith() Extension Method Implementation In The World</title>
				<description>&lt;p&gt;This is in fact the Greatest &lt;code&gt;string.FormatWith()&lt;/code&gt; Extension Method Implementation In The World. I have taken it with me for a few projects now. I found it in Perth, &lt;del&gt;probably thanks to my brother-in-code &lt;a href=&quot;http://robdmoore.id.au/&quot;&gt;Rob Moore&lt;/a&gt;&lt;/del&gt; &lt;strong&gt;correction&lt;/strong&gt; turns out credit is due to &lt;a href=&quot;http://hammerproject.com/&quot;&gt;Matt Kocoj&lt;/a&gt;, and I brought it back along the breadth of our mighty continent. A 'Journey to the West', if you will. Less awesome implementations of &lt;code&gt;FormatWith()&lt;/code&gt; are just simple inversions of &lt;code&gt;string.Format()&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static string FormatWith(string s, params object[] args)
{
    return string.Format(s, args);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which you can use thusly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;This is {0} the {1} {2} in the {3}&quot;.FormatWith(
    &quot;not&quot;, &quot;greatest&quot;, &quot;string.FormatWith() implementation&quot;, &quot;world&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;http://media.giphy.com/media/B9bZxUmVr3ZNS/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nice, but let's be honest, pitiful. Feel the power of this implementation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static class StringExtensions
{
    public static string FormatWith(this string format, params object[] args)
    {
        args = args ?? new object[0];

        var distinctNumberedTemplateMatches =
            (from object match in new Regex(@&quot;\{\d{1,2}\}&quot;).Matches(format) select match.ToString())
            .Distinct().Count();
        if (distinctNumberedTemplateMatches != args.Length)
        {
            var argsDic = GetDictionaryFromAnonObject(args[0]);

            if (argsDic.Count &amp;lt; 1)
            {
                throw new InvalidOperationException(&quot;Please supply enough args for the numbered templates or use an anonymous object to identify the templates by name.&quot;);
            }

            return argsDic.Aggregate(format, (current, o) =&amp;gt; current.Replace(&quot;0&quot;.FormatWith(o.Key), o.Value.ToString()));
        }

        var validationInput = format;
        for (var i = 0; i &amp;lt; args.Length; i++)
        {
            format = format.Replace(&quot;{&quot; + i + &quot;}&quot;, args[i] == null ? string.Empty : args[i].ToString());
        }
        if (validationInput == format)
        {
            throw new InvalidOperationException(
                &quot;You can not mix template types. Use numbered templates or named ones with an anonymous object.&quot;);
        }

        return format;
    }

    private static IDictionary&amp;lt;string, object&amp;gt; GetDictionaryFromAnonObject(object args)
    {
        if (args == null)
        {
            return new Dictionary&amp;lt;string, object&amp;gt;();
        }

        return TypeDescriptor.GetProperties(args).Cast&amp;lt;PropertyDescriptor&amp;gt;()
            .ToDictionary(
                property =&amp;gt; property.Name, 
                property =&amp;gt; property.GetValue(args));
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can be used in the same way as before:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;This is {0} the {1} {2} in the {3}&quot;.FormatWith(
    &quot;definitely&quot;, &quot;greatest&quot;, &quot;string.FormatWith() implementation&quot;, &quot;world, but why?&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or it can go full &lt;a href=&quot;http://dragonball.wikia.com/wiki/Super_Saiyan&quot;&gt;super-saiyan&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;{who} is {what} who {action} with {target}!&quot;.FormatWith(new{
    who = &quot;Hero&quot;,
    what = &quot;he alone&quot;,
    action = &quot;vies&quot;,
    target=  &quot;powers supreme&quot;})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;http://media.giphy.com/media/6KlLzO38CkLjG/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Now this is probably not the most performant code. If you're going to run this in a tight loop you may want to go with ye olde &lt;code&gt;string.Format()&lt;/code&gt;. The other 99.99% of the time, go forth and be awesome.&lt;/p&gt;
</description>
				<pubDate>Sun, 06 Apr 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/the-greatest-string-formatwith-implementation-in-the-world.html</link>
				<guid isPermaLink="true">http://bendetat.com/the-greatest-string-formatwith-implementation-in-the-world.html</guid>
			</item>
		
			<item>
				<title>Using IDisposable for entry/exit pattern</title>
				<description>&lt;p&gt;I don't know if &quot;entry/exit&quot; is the right name for this pattern, but it gets used a lot in client-side code. It relates to the use of guard sections and cross-cutting concerns. For example, using Caliburn.Micro you might have a WPF viewmodel (implementing &lt;code&gt;PropertyChangedBase&lt;/code&gt;) that sets  &lt;code&gt;IsNotifying&lt;/code&gt; flag to false, executes some code that would otherwise cause notifications, then sets the &lt;code&gt;IsNotifying&lt;/code&gt; flag to true.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;IsNotifying = false;

Name = &quot;foo&quot;;   // won't notify

IsNotifying = true;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem with this is having to explicitly set the flags before and after the operation. What if some statements get moved around, or the assignations get dropped? This can be a tricky issue to resolve as the usage of the class isn't very clear to consumers.&lt;/p&gt;

&lt;p&gt;A pattern I've seen is to wrap the code in an &lt;code&gt;Action&lt;/code&gt; invoker:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public void InvokeWithoutNotification(Action action) {
    IsNotifying = false;
    action();
    IsNotifying = true;
}

this.InvokeWithoutNotification(() =&amp;gt; {
    Name = &quot;foo&quot;;
});

// or:

viewModel.InvokeWithoutNotification(() =&amp;gt; viewModel.Name = &quot;foo&quot;);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is much nicer, but there is a layer of indirection with the action. You could step right over the entire action payload when debugging, the stack trace has an extra entry. Still, this is a very attractive solution.&lt;/p&gt;

&lt;p&gt;I had a thought that you could do something very similar using &lt;code&gt;IDisposable&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class PropertyChangedBaseIsNotifyingGuard
    : IDisposable {
    PropertyChangeBase _target;

    public PropertyChangedBaseIsNotifyingGuard(PropertyChangeBase target) {
        _target = target;
        _target.IsNotifying = false;
    }

    public void Dispose() {
        _target.IsNotifying = true;
    }
}

public static class PropertyChangedBaseExtensions {
    public static PropertyChangedBaseIsNotifyingGuard WithoutNotification(
        this PropertyChangedBase target) {
        return new PropertyChangedBaseIsNotifyingGuard(target);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gets used in a &lt;code&gt;using&lt;/code&gt; statement:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using (this.WithoutNotification()) {
    Name = &quot;foo&quot;;
}

// or

using (viewModel.WithoutNotification()) {
    viewModel.Name = &quot;foo&quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is more ceremony involved with the setup and there isn't a heap of immediate benefits. One is the seperation of this guard logic into its own class, which may or may not be appropriate but is at least an interesting possibility. You could also combine guards quite easily:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using (viewModel.WithoutNotification())
using (viewModel.WithoutValidation())
using (viewModel.ValidateOnCompletion())
{
    viewModel.Name = &quot;foo&quot;;
}

// ValidateOnCompletion:
public class SpecialViewModelValidateOnCompletionGuard
    : IDisposable {
    PropertyChangeBase _target;

    public SpecialViewModelValidateOnCompletionGuard(SpecialViewModel target) {
        _target = target;
    }

    public void Dispose() {
        _target.PerformValidation();
        _target.CommitValidation();
        _target.RainbowsAndUnicorns();
    }
}
public static class SpecialViewModelExtensions {
    public static SpecialViewModelValidateOnCompletionGuard ValidateOnCompletion(
        this SpecialViewModel target) {
        return new SpecialViewModelValidateOnCompletionGuard(target);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is getting very similar to what you can achieve in &lt;a href=&quot;http://en.wikipedia.org/wiki/Aspect-oriented_programming&quot;&gt;Aspect-oriented programming&lt;/a&gt; using entry and exit pointcuts, however in AOP the pointcuts can only extend down to method granularity, so the payload would have to be its own method. I think it's a pretty neat compromise.&lt;/p&gt;
</description>
				<pubDate>Tue, 01 Apr 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/using-idisposable-for-entry-exit-patterns.html</link>
				<guid isPermaLink="true">http://bendetat.com/using-idisposable-for-entry-exit-patterns.html</guid>
			</item>
		
			<item>
				<title>Uninstalling Azure Service Bus after (accidently) deleting the databases</title>
				<description>&lt;p&gt;I accidently blew away my databases (while upgrading the SQL Server version) and my local Azure Service Bus stopped working. You can't reinstall or restore easily AFAIK so I just wanted to uninstall Azure Service Bus and start again. Unfortunately you can't uninstall without leaving the farm, and you can't leave the farm without the databases.&lt;/p&gt;

&lt;p&gt;The answer is to remove the registry key for the service bus, which is in &lt;code&gt;HKLM\Software\Microsoft\Service Bus&lt;/code&gt;. That tells the unstaller that there is nothing to see and allows uninstallation.&lt;/p&gt;

&lt;p&gt;Found at &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/windowsazure/en-US/f5096a7a-9605-4231-b093-b7d278be7c20/cant-uninstall-service-bus&quot;&gt;http://social.msdn.microsoft.com/Forums/windowsazure/en-US/f5096a7a-9605-4231-b093-b7d278be7c20/cant-uninstall-service-bus&lt;/a&gt; (similar but unrelated root cause).&lt;/p&gt;
</description>
				<pubDate>Thu, 27 Mar 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/uninstalling-azure-service-bus.html</link>
				<guid isPermaLink="true">http://bendetat.com/uninstalling-azure-service-bus.html</guid>
			</item>
		
			<item>
				<title>A list of my favourite Visual Studio shortcuts</title>
				<description>&lt;p&gt;Set them in Tools -&gt; Options -&gt; Environment -&gt; Keyboard.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;File.Close&lt;/code&gt;: &lt;code&gt;Ctrl+Shift+W&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Window.MovetoPreviousTabGroup&lt;/code&gt;: &lt;code&gt;Ctrl+Shift+Alt+[&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Window.MovetoNextTabGroup&lt;/code&gt;: &lt;code&gt;Ctrl+Shift+Alt+]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Thu, 27 Mar 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/a-list-of-my-favourite-visual-studio-keyboard-shortcuts.html</link>
				<guid isPermaLink="true">http://bendetat.com/a-list-of-my-favourite-visual-studio-keyboard-shortcuts.html</guid>
			</item>
		
			<item>
				<title>Git - reapply a commit using cherry-pick</title>
				<description>&lt;p&gt;How do I reapply a commit, so I actually want the commit run twice? Say I do something cool, then do something uncool, and want to do that cool thing again, without having to mess around with history?&lt;/p&gt;

&lt;p&gt;Say I pull in some dependency which adds a readme file somewhere, then I delete the readme file, then I update the dependency which pulls in the file again.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;we use Git's cherry-pick command, which applies it as a patch and immediately commits it with the same commit message):&lt;/p&gt;&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;git cherry-pick 89bec60
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://definitivedrupal.org/suggestions/using-git-re-apply-old-over-written-change&quot;&gt;&lt;em&gt;Turns out&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Wed, 26 Mar 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/git-reapply-a-commit-cherry-pick.html</link>
				<guid isPermaLink="true">http://bendetat.com/git-reapply-a-commit-cherry-pick.html</guid>
			</item>
		
			<item>
				<title>Xamarin Studio can't find my Android device</title>
				<description>&lt;p&gt;&lt;strong&gt;Know what?&lt;/strong&gt; This doesn't work. Try setting the USB transfer mode (Settings, Storage, (in the menu) USB computer connection) to 'Camera (PTP)'. Found in &lt;a href=&quot;http://stackoverflow.com/a/16797152/149259&quot;&gt;this StackOverflow answer&lt;/a&gt;. I'll leave the below for reference in case it comes in handy.&lt;/p&gt;

&lt;h3&gt;Messing with Android Developer Bridge (ADB)&lt;/h3&gt;

&lt;p&gt;I installed Xamarin Studio on Windows 8 to start on some Android development. I was able to debug directly on my little oldish Nexus 7 (running Android 4.4.2) (Xamarin's instructions are &lt;a href=&quot;http://docs.xamarin.com/guides/android/getting_started/installation/set_up_device_for_development/&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;after enabling debug mode on the device:

&lt;ul&gt;
&lt;li&gt;'Settings'&lt;/li&gt;
&lt;li&gt;'About tablet'&lt;/li&gt;
&lt;li&gt;Tap 'Build number' &lt;em&gt;seven&lt;/em&gt; times&lt;/li&gt;
&lt;li&gt;Go back, and 'Developer options' will be at the bottom of the 'Settings' screen&lt;/li&gt;
&lt;li&gt;Within 'Developer options', check 'USB debugging'&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;and installing the OEM drivers for the tablet:

&lt;ul&gt;
&lt;li&gt;My device is an Asus Nexus 7, so I downloaded the drivers from &lt;a href=&quot;http://www.asus.com/Tablets_Mobile/Nexus_7/#support&quot;&gt;ASUS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In 'Device Manager' under 'Other Devices', right click the device and 'Update Driver Software'&lt;/li&gt;
&lt;li&gt;Browse to and select the downloaded OEM driver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This worked fine, yay for me. The problem was, after restarting my system (after an upgrade to Windows 8.1 (how seamless is that now by the way?)) Xamarin Studio wasn't seeing my device. It was still showing up in Device Manager correctly and debug mode was still enabled, but something broke.&lt;/p&gt;

&lt;p&gt;Turns out the something is the Android Debug Bridge, or ADB. I found a reference deep in &lt;a href=&quot;http://docs.xamarin.com/guides/android/troubleshooting/offline.pdf&quot;&gt;this document (WARNING PDF)&lt;/a&gt; from Xamarin:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/uWvypuM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Helpful but not extremely helpful. That link to &lt;code&gt;adb program&lt;/code&gt; is broken by the way. I found some nicer information about the Android Debug Bridge on &lt;a href=&quot;http://developer.android.com/tools/help/adb.html&quot;&gt;Android's developer site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next step is actually finding the ADB program, which is part of the Android SDK. I looked all over my machine for the SDK. &lt;em&gt;Turns out&lt;/em&gt; Xamarin installs the SDK in the user's local AppData directory, in &lt;code&gt;X:\Users\username\AppData\Local\Android\android-sdk&lt;/code&gt;. Then &lt;code&gt;adp.exe&lt;/code&gt; lives in the &lt;code&gt;platform-tools&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;After all that, I dropped a batch file on my desktop to restart the bridge, in case this happens again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@C:\Users\ben\AppData\Local\Android\android-sdk\platform-tools\adb.exe kill-server
@C:\Users\ben\AppData\Local\Android\android-sdk\platform-tools\adb.exe start-server
@pause
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Results:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/fqjVl9L.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 23 Mar 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/xamarin-studio-cant-find-my-android-device.html</link>
				<guid isPermaLink="true">http://bendetat.com/xamarin-studio-cant-find-my-android-device.html</guid>
			</item>
		
			<item>
				<title>Set up TeamCity on an Azure virtual machine</title>
				<description>&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; I'm learning in the open here. I have barely used Azure and have only ever used already established TeamCity instances, so I'm really just messing around with two new things at the same time here. I'm sure I'm missing a heap of very important points.&lt;/p&gt;

&lt;h2&gt;Set up the VM&lt;/h2&gt;

&lt;h3&gt;Get started on Azure&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/AsSmaMo.png&quot; style=&quot;float:right&quot;/&gt; Setting up a new Azure account is pretty much as easy as hitting &lt;a href=&quot;http://windowsazure.com&quot;&gt;http://windowsazure.com&lt;/a&gt; and starting a free trial. You land in a sweet management console that is a lot easier to use than I expected, based on my experiences with Office 365 (early versions), OWA and SharePoint. &lt;a href=&quot;http://www.troyhunt.com/&quot;&gt;Troy Hunt&lt;/a&gt; recently released an awesome Azure demo video - &lt;a href=&quot;http://worldsgreatestazuredemo.com/&quot;&gt;http://worldsgreatestazuredemo.com/&lt;/a&gt; - which is a good introduction to Azure.&lt;/p&gt;

&lt;h3&gt;Create a new virtual machine&lt;/h3&gt;

&lt;p&gt;Select the VIRTUAL MACHINES tab and click NEW from the bottom menu. Select FROM GALLERY and pick 'Windows Server 2012 R2 Datacenter' (or whatever is most current). Hit next and give it a cool name. I just left the size at Small for now. Enter a username and password, which you will need to remote into the VM. Next through the rest of the pages and the VM will soon be provisioned:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/SzdGki7.png&quot; alt=&quot;http://i.imgur.com/SzdGki7.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click that arrow to start managing the VM.&lt;/p&gt;

&lt;h3&gt;Open up the firewall&lt;/h3&gt;

&lt;p&gt;We'll want to open up port 80 for TeamCity. Select the ENDPOINTS tab and ADD a new one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/nelGyMd.png&quot; alt=&quot;http://i.imgur.com/nelGyMd.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Note that you're ADDing an endpoint. The NEW button will start creating a new VM. It's like Microsoft wants you to keep adding more and more VMs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Accept the first screen to add a stand-alone endpoints (load balancing sounds a little too technical for today although I'm sure it's a great idea). Pick HTTP from the NAME drop-down, which will automatically fill in the port number. Complete the screen.&lt;/p&gt;

&lt;p&gt;This opens port 80 on the &lt;em&gt;external&lt;/em&gt; firewall. The server's internal firewall will still need to be configured (below).&lt;/p&gt;

&lt;h3&gt;Attach a new disk&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/4Znf3hr.png&quot; style=&quot;float: left; padding-right: 1em;&quot;/&gt; The VM has two drives configured by default - C:, which contains the Windows installation, and D:, which is called temporary storage. They both sound a bit transient, so it is probably a good idea to attach a new disk, which can be managed separately and moved from machine to machine AFAIK.&lt;/p&gt;

&lt;p&gt;Attach a new disk by selecting the ATTACH option from the bottom menu. Select Empty Disk.  Accept the defaults, I gave it a size of 20 GB. I'm assuming it's easy to increase the size later. The disk will be attached and the status should return to running.&lt;/p&gt;

&lt;h3&gt;Remote in and start configuring the VM&lt;/h3&gt;

&lt;p&gt;Go to the DASHBOARD tab and select CONNECT from the bottom menu. This will download an .RDP file which will should open in Remote Desktop. Enter the username and password and you should get connected to the server's desktop.&lt;/p&gt;

&lt;h4&gt;IE Enhanced Security&lt;/h4&gt;

&lt;p&gt;Turn off IE Enhanced Security from the Server Manager, in the Local Server Tab. This will let you use Internet Explorer to download TeamCity (or to install Chrome to download TeamCity and lolcats).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/N5ouyt1.png&quot; alt=&quot;IE Enhanced Security&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Open port 80 in the firewall&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/376xLMi.png&quot; style=&quot;float:right&quot;/&gt; Open the Windows Firewall with Advanved Security MMC snap-in. Easiest way to find it is to search for &lt;code&gt;firewall&lt;/code&gt; from the start screen. Create a new inbound rule.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/MlQbntP.png&quot; alt=&quot;http://i.imgur.com/MlQbntP.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select Port, specify local TCP port 80, Allow the connection, apply the rule to all profiles, and call the rule &lt;code&gt;TeamCity&lt;/code&gt; (so you can find it again ;-) ).&lt;/p&gt;

&lt;h4&gt;Format and assign the empty disk&lt;/h4&gt;

&lt;p&gt;The empty disk that we attached needs to be formatted and assigned to a drive letter in the server as well. You can think of attaching an empty disk as plugging in a new disk to any normal machine - the disk still needs be configured in the OS.&lt;/p&gt;

&lt;p&gt;In the Server Manager, select File and Storage Services, then Disks (under Volumes). The new disk should be online with a partition type of 'Unknown'. Right-click the disk and select New Volume...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/vgarRGg.png&quot; alt=&quot;File and Storage Services - New Volume&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next through everything and accept the defaults. It should be assigned to drive E:. I gave it a volume name of &lt;code&gt;bendetat-teamcity&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Just sit back for a moment and look at what we've achieved. We've got a new VM running the latest Windows Server OS, firewalls configured and remote desktop enabled. I haven't even taken out my credit card yet. Compare with the amount of work needed to boot up a new physical server in a network, or even provisioning a new VM in Hyper-V. Squeeeee? Indeed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Install TeamCity&lt;/h2&gt;

&lt;p&gt;I just downloaded the 'default free professional edition' of TeamCity from &lt;a href=&quot;http://www.jetbrains.com/teamcity/download/&quot;&gt;here&lt;/a&gt;. The version at the time of writing was 8.1.1.&lt;/p&gt;

&lt;p&gt;It downloads blazingly fast, I assume because the internet pipes are faster everywhere except here in Australia. Ahem.&lt;/p&gt;

&lt;p&gt;Start up the installer. Select &lt;code&gt;e:\TeamCity&lt;/code&gt; as the destination folder (or wherever the new disk was assigned). I also left the components as default, which installs a build agent and the server with Windows services. Change the TeamCity data directory to somewhere on the new disk - I used &lt;code&gt;e:\TeamCity-data&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After installation the Build Agent properties configuration appears, I just left this as default. It knows what it was doing. Then the Server service Service Account selector sashays onto the screen. I left it as user account. The domain is the name of the machine, the username and password should be the same as used to RDP into the VM. Do the same for the TeamCity Agent service account. Next through and the services will start. After you finish the installation, TeamCity First Start should open in IE.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Note that at this point the TeamCity instance should actually be available &lt;strong&gt;to the public&lt;/strong&gt; at &lt;code&gt;&amp;lt;machine name&amp;gt;.cloudapp.net&lt;/code&gt;. Either turn off the firewall to configure it locally or &lt;em&gt;very quickly&lt;/em&gt; configure the administrator account before publicising the name of the server.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Start working through this wizard. I used the &lt;code&gt;Internal (HSQLDB)&lt;/code&gt; database type. I'll leave migrating to another database for later.&lt;/p&gt;

&lt;h2&gt;Fin&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/X1BGjuk.png&quot; alt=&quot;http://i.imgur.com/X1BGjuk.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next I'll try adding a small OSS project to the TeamCity installation, with Github hooks and magic unicorns.&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.virtew.com/2012/08/18/setup-teamcity-on-an-azure-virtual-machine-for-windows-8-metro-style-apps/&quot;&gt;virtew - Setup TeamCity on an Azure Virtual Machine for Windows 8 Metro Style Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://worldsgreatestazuredemo.com/&quot;&gt;World's Greatest Azure Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Sun, 16 Mar 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/set-up-teamcity-on-an-azure-instance.html</link>
				<guid isPermaLink="true">http://bendetat.com/set-up-teamcity-on-an-azure-instance.html</guid>
			</item>
		
			<item>
				<title>Setting an image source using a trigger (WPF and Caliburn.Micro)</title>
				<description>&lt;p&gt;So all I'm doing here is creating a button that has a different images depending on the enum value that is bound to the control.&lt;/p&gt;

&lt;p&gt;The images used are linked as resources in a resource project - the build action is &lt;code&gt;Resource&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://snag.gy/o9v6X.jpg&quot; alt=&quot;Images are linked using a build action of Resource&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The button's view model (&lt;code&gt;ToggleMyEnumViewModel.cs&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class ToggleMyEnumViewModel : Screen
{
    MyEnum _myEnumProperty = MyEnum.Foo;

    public MyEnum MyEnumProperty
    {
        get { return _myEnumProperty; }
        set
        {
            _myEnumProperty = value;
            NotifyOfPropertyChange(() =&amp;gt; MyEnumProperty);
        }
    }

    public void ToggleMyThing()
    {
        MyEnumProperty = MyEnumProperty == MyEnum.Foo
            ? MyEnum.Bar
            : MyEnum.Foo;
    }
}

public enum MyEnum {
    Foo, Bar
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The button's XAML (&lt;code&gt;ToggleMyEnumView.xaml&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Button x:Class=&quot;MyNamespace.ToggleMyEnumButton&quot;
             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; 
             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;
             xmlns:local=&quot;clr-namespace:MyNamespace&quot;
             xmlns:i=&quot;http://schemas.microsoft.com/expression/2010/interactivity&quot;
             mc:Ignorable=&quot;d&quot; 
             Cursor=&quot;Hand&quot;
             Background=&quot;Transparent&quot;&amp;gt;
    &amp;lt;Image Stretch=&quot;Uniform&quot;&amp;gt;
        &amp;lt;Image.Resources&amp;gt;
            &amp;lt;Style x:Key=&quot;XButtonStyle&quot; TargetType=&quot;{x:Type Image}&quot;&amp;gt;
                &amp;lt;Style.Triggers&amp;gt;
                    &amp;lt;DataTrigger Binding=&quot;{Binding MyEnumProperty}&quot; Value=&quot;{x:Static local:MyEnum.Foo}&quot;&amp;gt;
                        &amp;lt;Setter Property=&quot;Image.Source&quot; Value=&quot;pack://application:,,,/MyProject.Assets;component/Images/foo.png&quot; /&amp;gt;
                    &amp;lt;/DataTrigger&amp;gt;
                    &amp;lt;DataTrigger Binding=&quot;{Binding MyEnumProperty}&quot; Value=&quot;{x:Static local:MyEnum.Bar}&quot;&amp;gt;
                        &amp;lt;Setter Property=&quot;Image.Source&quot; Value=&quot;pack://application:,,,/MyProject.Assets;component/Images/bar.png&quot; /&amp;gt;
                    &amp;lt;/DataTrigger&amp;gt;
                &amp;lt;/Style.Triggers&amp;gt;
            &amp;lt;/Style&amp;gt;
        &amp;lt;/Image.Resources&amp;gt;
    &amp;lt;/Image&amp;gt;

&amp;lt;i:Interaction.Triggers&amp;gt;
    &amp;lt;i:EventTrigger EventName=&quot;Click&quot;&amp;gt;
        &amp;lt;cal:ActionMessage MethodName=&quot;ToggleMyThing&quot;/&amp;gt;
    &amp;lt;/i:EventTrigger&amp;gt;
&amp;lt;/i:Interaction.Triggers&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;   &lt;/Button&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;cal:ActionMessage MethodName=&quot;ToggleMyThing&quot;/&amp;gt;&lt;/code&gt; part is what binds the button click to the &lt;code&gt;ToggleMyThing&lt;/code&gt; method in the view model.&lt;/p&gt;

&lt;p&gt;Things to note in the view's XAML:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The style sits in the image's resources&lt;/li&gt;
&lt;li&gt;The target type of the style is set to the &lt;code&gt;Image&lt;/code&gt; type&lt;/li&gt;
&lt;li&gt;The trigger has to be a data trigger&lt;/li&gt;
&lt;li&gt;The trigger just sets the &lt;code&gt;Source&lt;/code&gt; property of the image based on the value of the &lt;code&gt;MyEnum&lt;/code&gt; property&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is then used as a content control bound to an instance of a &lt;code&gt;ToggleMyEnumViewModel&lt;/code&gt;. Consuming XAML:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ContentControl x:Name=&quot;ToggleMyEnum&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Consuming view model:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public ToggleMyEnumViewModel ToggleMyEnum { get; private set; }

public ConsumingViewModel()
{
    /// ...
    ToggleMyEnum = new ToggleMyEnumViewModel(); // or use an IOC factory
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This isn't exactly what I want, I would prefer to bind directly to a property on the consuming view model rather than indirectly with the &lt;code&gt;ToggleMyEnumViewModel&lt;/code&gt;.&lt;/p&gt;
</description>
				<pubDate>Wed, 29 Jan 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/setting-an-image-source-using-a-trigger-wpf.html</link>
				<guid isPermaLink="true">http://bendetat.com/setting-an-image-source-using-a-trigger-wpf.html</guid>
			</item>
		
			<item>
				<title>Git cherry-pick from another repository</title>
				<description>&lt;p&gt;Somehow.. somehow... I managed to overwrite a commit by force-pushing a branch that didn't include said commit.&lt;/p&gt;

&lt;p&gt;The commit was made in a local copy of the repository that I was working on in parallel with my normal working copy. So,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c:\source\repo        &amp;lt;-- working copy
c:\source\repo-copy   &amp;lt;-- copy with the commit I need
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I didn't want to mess around with rebasing the &lt;code&gt;repo-copy&lt;/code&gt; to merge in the remote branch and totally muck everything up.&lt;/p&gt;

&lt;p&gt;The solution is to cherry pick the commit from the working copy. First add the local copy as a remote to the working copy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c:\source\repo&amp;gt; git remote add localcopy ../repo-copy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This adds a remote called &lt;code&gt;localcopy&lt;/code&gt; which points to the local repo copy. Then, fetch from &lt;code&gt;localcopy&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c:\source\repo&amp;gt; git fetch localcopy
remote: Counting objects: 500, done.                                                                                   
remote: Compressing objects: 100% (306/306), done.                                                                     
emote: Total 444 (delta 329), reused 149 (delta 132)                                                                   
Receiving objects: 100% (444/444), 58.53 KiB | 0 bytes/s, done.                                                        
Resolving deltas: 100% (329/329), completed with 35 local objects.                                                     
From ..\repo-copy\                                                                                                  
 * [new branch]      xxxx -&amp;gt; repo-copy/xxxx              
 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;What happened with  line 3 of the response? &lt;code&gt;emote&lt;/code&gt;? strange.&lt;code&gt;&amp;lt;/aside&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then cherry-pick the appropriate commit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c:\source\repo-copy&amp;gt; git cherry-pick &amp;lt;commit-hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I had to resolve some conflicts but it all looks ok.&lt;/p&gt;
</description>
				<pubDate>Fri, 24 Jan 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/git-cherry-pick-from-another-repository.html</link>
				<guid isPermaLink="true">http://bendetat.com/git-cherry-pick-from-another-repository.html</guid>
			</item>
		
			<item>
				<title>Get running fast on GitHub and BitBucket</title>
				<description>&lt;h3&gt;GH4W&lt;/h3&gt;

&lt;p&gt;I use &lt;a href=&quot;http://windows.github.com/&quot;&gt;GitHub for Windows&lt;/a&gt; to get up and running quickly with GitHub on a new machine. Opening a Powershell instance from GH4W gives me a relatively nice msysgit setup. Then the &lt;code&gt;github_rsa.pub&lt;/code&gt; file in &lt;code&gt;C:\Users\**username**\.ssh&lt;/code&gt; can be used added to BitBucket to get that running with the same credentials.&lt;/p&gt;

&lt;h3&gt;Switch to Cmder&lt;/h3&gt;

&lt;p&gt;I just tried out &lt;a href=&quot;http://bliker.github.io/cmder/&quot;&gt;Cmder&lt;/a&gt; with great success as a Powershell replacement but the msysgit instance used in that doesn't work with the public key named &lt;code&gt;github_rsa.pub&lt;/code&gt;. I just copied &lt;code&gt;github_rsa.pub&lt;/code&gt; to &lt;code&gt;id_rsa.pub&lt;/code&gt; and &lt;code&gt;github_rsa&lt;/code&gt; to &lt;code&gt;id_rsa&lt;/code&gt;. Working well so far.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt; hmm looks like this is a work in progress....&lt;/p&gt;

&lt;p&gt;Run this to configure git to push the current branch by default:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global push.default current
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also check this out: &lt;a href=&quot;https://help.github.com/articles/set-up-git&quot;&gt;https://help.github.com/articles/set-up-git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looks like password caching is an issue, but only with non-SSH remote urls. If &lt;code&gt;.git/config&lt;/code&gt; looks like this it shoud use the above keys:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[remote &quot;origin&quot;]
    url = git@github.com:rgrrrrrba/rgrrrrrba.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Merge tool&lt;/h3&gt;

&lt;p&gt;I also needed to set my merge tool. I use (and pay for) &lt;a href=&quot;http://www.scootersoftware.com/moreinfo.php&quot;&gt;Beyond Compare 3&lt;/a&gt; and the &lt;a href=&quot;http://www.scootersoftware.com/support.php?zz=kb_vcs&quot;&gt;instructions here&lt;/a&gt; were helpful. The commands to use are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global merge.tool bc3
git config --global mergetool.bc3.path &quot;C:/Program Files (x86)/Beyond Compare 3/BCompare.exe&quot;                 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that you need to use forward-slashes in the path to BC. &lt;code&gt;~/.gitconfig&lt;/code&gt; should end up like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[merge]
    tool = bc3
[mergetool &quot;bc3&quot;]
    path = C:/Program Files (x86)/Beyond Compare 3/BCompare.exe
&lt;/code&gt;&lt;/pre&gt;
</description>
				<pubDate>Wed, 22 Jan 2014 00:00:00 +1000</pubDate>
				<link>http://bendetat.com/get-running-fast-on-github-and-bitbucket.html</link>
				<guid isPermaLink="true">http://bendetat.com/get-running-fast-on-github-and-bitbucket.html</guid>
			</item>
		
	</channel>
</rss>
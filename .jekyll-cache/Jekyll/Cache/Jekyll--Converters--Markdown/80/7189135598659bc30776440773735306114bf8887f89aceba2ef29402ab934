I"ç<p><a href="https://twitter.com/PawelPabich">Pawel Pabich</a> has a good way to <a href="https://www.pabich.eu/2011/03/automated-database-deployments-to.html">run DbUp as part of AppHarborâ€™s build process</a> which looks interesting but I wanted to run the migrations manually. So here is a quick recipe for setting up <a href="https://dbup.github.io/">DbUp</a> with a web hook.</p>

<p>Something important to note is that there is no security around this. It relies on an obfuscated controller path, so it is only really useful for bootstrapping an early project. The controller should be moved behind security as soon as possible.</p>

<p>Iâ€™m assuming that DbUp has been set up as per my post on <a href="/reset-the-world.html">resetting the world</a>. Specifically, the DbUp DLL should have an upgrader that looks like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>namespace ResetTheWorld
{
    public class DatabaseUpgrader
    {
        private const string ConnectionStringName = "xyz";

        public static void Upgrade(IUpgradeLog upgradeLog = null)
        {
            var connectionString = ConfigurationManager.ConnectionStrings[ConnectionStringName].ConnectionString;
            var upgrader = DeployChanges.To
				.SqlDatabase(connectionString)
				.WithScriptsEmbeddedInAssembly(Assembly.GetAssembly(typeof (DatabaseUpgrader)))
				.LogTo(upgradeLog ?? new ConsoleUpgradeLog())
				.Build();

            var result = upgrader.PerformUpgrade();

            if (!result.Successful)
            {
                throw new Exception("DB Upgrade failed", result.Error);
            }
        }

        public static void SetConnectionString(string connectionString)
        {
			typeof (ConfigurationElementCollection).GetField("bReadOnly", BindingFlags.Instance | BindingFlags.NonPublic)
				.SetValue(ConfigurationManager.ConnectionStrings, false);
			ConfigurationManager.ConnectionStrings.Add(new ConnectionStringSettings(ConnectionStringName,
				connectionString,
				"System.Data.SqlClient"));
        }
    }
}
</code></pre></div></div>

<p>Iâ€™ve just created a controller with a long random name:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class njvfdklnvfjdkslndsieController : Controller
{
	public ActionResult UpdateTheWorld()
	{
		var log = new HtmlLog();

		DatabaseUpgrader.Upgrade(log);

		ViewBag.Log = log.ToString();

		return View();
	}
}
</code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">HtmlLog</code> is a basic replacement for DbUpâ€™s console log that just builds up a HTML string:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class HtmlLog : IUpgradeLog
{
	readonly StringBuilder _stringBuilder = new StringBuilder();
	public override string ToString()
	{
		return _stringBuilder.ToString();
	}

	public void WriteError(string format, params object[] args)
	{
		_stringBuilder.AppendFormat("&lt;p class='error'&gt;" + format + "&lt;/p&gt;", args);
	}

	public void WriteInformation(string format, params object[] args)
	{
		_stringBuilder.AppendFormat("&lt;p class='information'&gt;" + format + "&lt;/p&gt;", args);
	}

	public void WriteWarning(string format, params object[] args)
	{
		_stringBuilder.AppendFormat("&lt;p class='warning'&gt;" + format + "&lt;/p&gt;", args);
	}
}
</code></pre></div></div>

<p>And the view for the <code class="language-plaintext highlighter-rouge">UpdateTheWorld()</code> action just writes out the log, with added colours:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@model dynamic

@{
	ViewBag.Title = "UpdateTheWorld";
}

&lt;style&gt;
	p.error{color:red}
	p.information{color:#000}
	p.warning{color:orange}
&lt;/style&gt;

&lt;h1&gt;UpdateTheWorld&lt;/h1&gt;
@Html.Raw(ViewBag.Log)
</code></pre></div></div>

<p>Now browsing to <code class="language-plaintext highlighter-rouge">https://&lt;app&gt;.apphb.com/njvfdklnvfjdkslndsie/UpdateTheWorld</code> will update the existing database. A <code class="language-plaintext highlighter-rouge">ResetTheWorld</code> action could be added which drops the database before running the scripts.</p>

:ET
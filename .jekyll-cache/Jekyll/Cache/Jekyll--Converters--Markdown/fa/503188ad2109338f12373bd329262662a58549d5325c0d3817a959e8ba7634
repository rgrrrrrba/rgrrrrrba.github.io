I"	<p>I’ve used two methods of closing branches in Mercurial.</p>

<h3 id="non-destructively-closing-the-branch">Non-destructively closing the branch</h3>

<p>The first non-destructively closes the branch just so it doesn’t show up in <code class="language-plaintext highlighter-rouge">hg heads</code>. You switch to the bad branch (use either the tag or revision number) then add a commit that closes the branch:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hg up -C badbranch
hg com --close-branch -m "closing this branch"
hg up default
</code></pre></div></div>

<h3 id="destroying-all-unwanted-branches">Destroying all unwanted branches</h3>

<p>The second destructively closes the branch, which can dramatically reduce the size of the repository’s <code class="language-plaintext highlighter-rouge">.hg</code> folder. I did this when I was <a href="https://blog.belfryimages.com.au/post/5203916079/ssh-for-pushing-large-repositories-to-bitbucket">moving my work repository to BitBucket</a>. It isn’t an easy process and is very time consuming, and make sure you have backups.</p>

<p>Say you’re in <code class="language-plaintext highlighter-rouge">C:\projects</code> and the repository you want to clone is in <code class="language-plaintext highlighter-rouge">C:\projects\my_repo</code>. You clone the entire repository, but only the heads that you want to keep:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hg clone my_repo my_repo.clone --rev &lt;revision&gt; --rev &lt;another revision&gt; ...
</code></pre></div></div>

<p>For example, I only wanted to save my <code class="language-plaintext highlighter-rouge">default</code> and <code class="language-plaintext highlighter-rouge">stable</code> branches, so I used <code class="language-plaintext highlighter-rouge">hg clone my_repo my_repo.clone --rev default --rev stable</code>.</p>

<p>Then verify that the differences between the original and the cloned repository are only the branches you wanted to drop:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hg incoming -R my_repo.clone my_repo
</code></pre></div></div>

<p>If you missed some changesets in the clone step you can pull them over:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hg pull -R my_repo.clone my_repo --rev &lt;missed revision&gt;
</code></pre></div></div>

<p>You then need to copy over non-tracked files from the original repository, especially <code class="language-plaintext highlighter-rouge">.hg\hgrc</code>, as the cloned repository is pointing to the original repository by default.</p>

<p>I had issues getting the trimmed repository over to other copies of the repository. In particular I couldn’t <code class="language-plaintext highlighter-rouge">hg pull</code> from the trimmed repository any more. I ended up just copying the entire repository to my different machines and set them up from there.</p>

<p>The <a href="https://mercurial.selenic.com/wiki/Mercurial">Mercurial Wiki</a> has a fine page on <a href="https://mercurial.selenic.com/wiki/PruningDeadBranches">pruning branches</a> which is where I found these methods.</p>

:ET